import MDAnalysis as mda
from MDAnalysis.analysis import distances
import numpy as np





distance_threshold = 10.0  # 閾値（Å）
snapshot_radius = 15.0     # スナップショットの半径（Å）

for ts in u.trajectory:
    # リファレンス分子の中心を計算
    reference_center = reference.center_of_mass()

    # 各ターゲット分子に対して処理
    for target_residue in targets.residues:
        target_atoms = target_residue.atoms
        target_center = target_atoms.center_of_mass()
        distance = np.linalg.norm(reference_center - target_center)

        if distance <= distance_threshold:
            # 座標のシフト
            shift = -reference_center
            shifted_positions = u.atoms.positions + shift
            u.atoms.positions = shifted_positions

            # スナップショットの選択
            snapshot_selection = f"(around {snapshot_radius} point 0 0 0) and not resname SOLV"
            snapshot_atoms = u.select_atoms(snapshot_selection) + reference + target_atoms
            snapshot_atoms = snapshot_atoms.unique

            # スナップショットの保存
            frame_number = ts.frame
            snapshot_filename = f"snapshot_frame{frame_number}_target{target_residue.resid}.pdb"
            with mda.Writer(snapshot_filename) as W:
                W.write(snapshot_atoms)

            # 座標を元に戻す
            u.atoms.positions = u.atoms.positions - shift
