import MDAnalysis as mda
from MDAnalysis.analysis import lineardensity
import matplotlib.pyplot as plt
import numpy as np

# 1. ユニバースの作成
# トポロジーファイルとトラジェクトリファイルを指定します
topology_file = 'topology.gro'       # 例：トポロジーファイル（.gro形式）
trajectory_file = 'trajectory.xtc'   # 例：トラジェクトリファイル（.xtc形式）

# ユニバースの作成
u = mda.Universe(topology_file, trajectory_file)

# 2. 原子グループの選択
# Si、O、Hの各原子グループを選択
si_atoms = u.select_atoms('name Si')
o_atoms = u.select_atoms('name O')
h_atoms = u.select_atoms('name H')

# 3. 密度プロファイルの計算
# LinearDensityクラスを使用して密度プロファイルを計算します
# 軸は界面の法線方向（例：z軸）を指定
ld_si = lineardensity.LinearDensity(si_atoms, grouping='atoms', bins=200)
ld_si.run()

ld_o = lineardensity.LinearDensity(o_atoms, grouping='atoms', bins=200)
ld_o.run()

ld_h = lineardensity.LinearDensity(h_atoms, grouping='atoms', bins=200)
ld_h.run()

# 4. 密度プロファイルの取得
# z軸に沿った密度データを取得
z = ld_si.results.z.pos
density_si = ld_si.results.z.mass_density
density_o = ld_o.results.z.mass_density
density_h = ld_h.results.z.mass_density

# 5. プロット
plt.figure(figsize=(8, 6))
plt.plot(z, density_si, label='Si')
plt.plot(z, density_o, label='O')
plt.plot(z, density_h, label='H')
plt.xlabel('Position along z-axis (Å)')
plt.ylabel('Mass Density (kg/m^3)')
plt.title('Density Profile along z-axis')
plt.legend()
plt.grid(True)
plt.show()
